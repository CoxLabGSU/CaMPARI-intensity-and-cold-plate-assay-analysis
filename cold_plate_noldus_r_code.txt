####COLD PLATE ANALYSIS FOR CICR PAPER




#Combines raw data output from Noldus and calculates various relevant cold evoked behavioral metrics
{tere<-choose.dir()

#####COLD PLATE ANALYSIS####

library(stringr)
library(qpcR)
library("gplots")
library(dplyr)
library(matrixStats)
library(zoo)
library(TTR)
library(viridis)
library(ggplot2)
library(markovchain)
library(stringr)
library(qpcR)
library("gplots")
library(dplyr)
library(matrixStats)
library(zoo)
library(TTR)
#This is the code for extracting and combining area for each genotype



vallow<--7.999
valmed<- -9.999

valhigh<--11.999


setwd(gsub("\\\\","/",tere))

dname<-list.dirs(".")
dir.create(paste0(tere,"/analyzed_stats"))

out<-paste0(tere,"/analyzed_stats")
outs<-gsub("\\\\","/",out)
vidnames<-c()
for(jj in 2:length(dname)){
  
  fname<-list.files(dname[jj],pattern="*.txt")
  fname[1]
  fnames<- sub('-Trial.*','',fname)
  fnames
  
  Area<-data.frame()
  Areah<-c()
  
  
  
  for(ii in 1:length(fname)){
    
    
    fff<-paste(dname[jj],"/",fname[ii],sep="")
    
    
    
    con <- readLines(fff , encoding = "UCS-2LE", n = 37,skip=1)
    
    bends<-gsub("\"|,|Video file","",con[37])
    
    vidname<-paste0("open(",shQuote(gsub("\\\\","/",bends)),");")
    vidnames<-c(vidnames,vidname)
    
    
    
    col1<-"User"
    og<-read.table(fff,sep=",",skip=32,fileEncoding="UCS-2LE",header=TRUE)
    r<-rbind(og[2:nrow(og),])
    i<-r$Area
    nn<-names(r)
    Area<-rbind(Area,as.double(as.character(i)))
    n9<-as.character(nn[9])
    pp<-paste("Area__",gsub(".csv","",fnames[ii]),sep="")
    Areah<-c(Areah,gsub(".*Files\\\\|.avi","",bends))
    
  }
  
  Areaj<-as.data.frame(t(Area))
  rownames(Areaj)<-c()
  colnames(Areaj)<-Areah
  setwd(gsub("\\\\","/",out))
  
  
  
  write.csv(Areaj,paste(gsub("./","",dname[jj]),".csv",sep=""))
  setwd(gsub("\\\\","/",tere))
  
  
}





#Below is code for area analysis



workme<-data.frame()


tere<-out
terwd<-gsub("\\\\","/",tere)
setwd(terwd)



allfiles <- list.files(terwd, pattern = "*.csv", full.names = TRUE)
allfiles

the_dir <- terwd


datmn<-data.frame(matrix(nrow=length(allfiles),ncol=451))

mean_areachangedata<-data.frame()




tailf<-data.frame(matrix(nrow=length(allfiles),ncol=20))
unlismn<-data.frame(matrix(nrow=length(allfiles),ncol=5740))
percentrespondercombine<-data.frame(matrix(nrow=length(allfiles),ncol=451))
percentresponderall<-data.frame(matrix(nrow=(3*length(allfiles)),ncol=451))
all_ct_percent<-list()
long_dat_comb<-list()
rowmn<-c()
i=0


for (file in allfiles) {

  i=i+1
  the_data <- read.csv(file)
  dats<-(the_data[1:nrow(the_data),2:ncol(the_data)])
  
  dat<-as.matrix(dats)
  xry<-dat[1:451,]
  x<-xry[,complete.cases(t(dat))]
  y<-x[1,]
  
  yvec<-c(y)
  
  s<-t(x)
  tt<- (y-s)*-1
  
  perchan<-t(tt/yvec)*100
  
  
  pmatarranged<-perchan[,order(colMeans(perchan))]
  
  
  perchans<-data.frame(pmatarranged)
  
  
  unlisdat<-data.frame(perchans)
  unlis<-unlist(unlisdat)
  names(unlis)<-c(basename(file))
  unlistrans<-t(unlis)
  names(unlis)<-basename(file)
  
  
  permean<-rowMeans(perchan, na.rm=TRUE)
  persem<-rowSds(perchan)/sqrt(ncol(perchan))
  
  percentresponders <-rowSums(perchan<valmed)/ncol(perchan)
  
  percentresponders <-rowSums(perchan<valmed)/ncol(perchan)
  percentrespondershigh <-rowSums(perchan<valhigh)/ncol(perchan)*100
  percentrespondersmed <-(rowSums(perchan<valmed)-rowSums(perchan<valhigh))/ncol(perchan)*100
  percentresponderslow<-(rowSums(perchan<vallow)-rowSums(perchan<valmed))/ncol(perchan)*100
  perresponsder_summary<-data.frame(cbind(percentresponderslow,percentrespondersmed,percentrespondershigh))
  
  
  colnames(perresponsder_summary)<-c(paste0("percentresponderslow_",basename(file)), paste0("percentresponderslmed_",basename(file)),paste0("percentrespondershigh_",basename(file)))
  

  write.csv(t(perresponsder_summary), file = paste0(the_dir, "/","perresponsder_summary", basename(file)))
  
  percentresponderall [i,]<-t(perresponsder_summary)
  
  ###this portion will give true latency for continuous CT below threshold (val=) for 15 seconds
  ###latency for 10 seconds medium treshold
  
  
  
  perchanlatency<-data.frame(perchan)
  perchanlatencyval<-perchanlatency-valmed
  perchanlatencyval[perchanlatencyval > 0] <- NA
  
  naperchanlatency<-perchanlatencyval
  
  
  
  
  
  lmax<-naperchanlatency
  lmax[lmax < 0] <- 1
  lmax[is.na(lmax)] <- 0
  lmaxt<-apply(lmax, 2, SMA, n=15)
  lmaxt[is.na(lmaxt)] <- 0
  lmaxt[lmaxt < 1] <- 0
  latencymedten<-(apply(lmaxt[1:300,],2,which.max))
  
  latencymedten[latencymedten == 1] <- NA

  perlatencymedten<-rowMeans(lmaxt, na.rm=TRUE)
  latencymedfive<-(apply(lmaxt[1:150,],2,which.max))
  latencymedfive[latencymedfive == 1] <- NA
  
  
  summary<-cbind(perchan,permean,persem,percentresponders,perlatencymedten)
  
  
  
  
  
  
  
  
  
  
  
  fivesecstim<-summary[1:150,]
  fivesecstimmean<-colMeans(fivesecstim)
  
  fivesecminifra<-(apply(fivesecstim,2,which.min))
  fivesecframeunnegmed<-colSums(fivesecstim<valmed)
  fivesecframeunneglow<-colSums(fivesecstim<vallow)
  fivesecframeunneghigh<-colSums(fivesecstim<valhigh)
  tensecstim<-summary[1:300,]
  tensecstimmean<-colMeans(tensecstim)
  tensecframeunnegmed<-colSums(tensecstim<valmed)
  tensecframeunneglow<-colSums(tensecstim<vallow)
  tensecframeunneghigh<-colSums(tensecstim<valhigh)
  
  
  
  
  calc<-rbind(summary,fivesecstimmean,tensecstimmean,fivesecframeunneglow,fivesecframeunnegmed,fivesecframeunneghigh,tensecframeunneglow,tensecframeunnegmed,tensecframeunneghigh,fivesecminifra,latencymedten,latencymedfive)
  saveme<-data.frame(calc)
  colnames(perchans)[colnames(perchans)=="User"]<-paste0(basename(file)) 
  colnames(saveme)[colnames(saveme)=="permean"]<-paste0("mean_",basename(file)) 
  colnames(saveme)[colnames(saveme)=="persem"]<-paste0("sem_",basename(file)) 
  colnames(saveme)[colnames(saveme)=="percentresponders"]<-paste0("percentresponders___",basename(file)) 
  colnames(saveme)[colnames(saveme)=="perlatencymedten"]<-paste0("perlatencymedten___",basename(file)) 
  
  rownames(saveme)[rownames(saveme)=="fivesecminifra"]<-paste0("fivesecminifra___",basename(file))
  rownames(saveme)[rownames(saveme)=="fivesecstimmean"]<-paste0("fivesecstimmean___",basename(file))
  rownames(saveme)[rownames(saveme)=="tensecstimmean"]<-paste0("tensecstimmean___",basename(file)) 
  rownames(saveme)[rownames(saveme)=="fivesecframeunneglow"]<-paste0("fivesecframeunneglow___",basename(file)) 
  rownames(saveme)[rownames(saveme)=="tensecframeunneglow"]<-paste0("tensecframeunneglow___",basename(file)) 
  
  rownames(saveme)[rownames(saveme)=="tensecframeunnegmed"]<-paste0("tensecframeunnegmed___",basename(file)) 
  rownames(saveme)[rownames(saveme)=="fivesecframeunnegmed"]<-paste0("fivesecframeunnegmed___",basename(file)) 
  
  rownames(saveme)[rownames(saveme)=="fivesecframeunneghigh"]<-paste0("fivesecframeunneghigh___",basename(file)) 
  rownames(saveme)[rownames(saveme)=="tensecframeunneghigh"]<-paste0("tensecframeunneghigh___",basename(file)) 
  rownames(saveme)[rownames(saveme)=="latencymedten"]<-paste0("latencymedten_for_half_sec_consecutive_ct___",basename(file))
  rownames(saveme)[rownames(saveme)=="latencymedfive"]<-paste0("latencymedfive_for_half_sec_consecutive_ct___",basename(file))
  

  
  
  datmn[i,]<-c(as.numeric(permean))
  
  unlismn[i,]<-c(as.numeric(unlistrans[1:5740]))
  percentrespondercombine[i,]<-c(as.numeric(percentresponders))
  
  
  file1<-basename(file)
  filesplt<-strsplit(file1,split="\\.")
  
  pgen<-paste(filesplt[[1]][1],"_Mean",sep="")
  geno<-sub('.*___', '', pgen)  
  pas<-sub('_areaArea_Mean.*', '', geno)
  rowmn<-c(rowmn,as.character(pas))
  
  
  
  pastimeseries<-replicate(451,pas)
  mean_change_area<-cbind(pastimeseries,permean,1:451)
  

  mean_areachangedata<- rbind(mean_areachangedata, mean_change_area)

  
  
  tailcol<-ncol(saveme)
  
  
  
  
  
  
  
  
  tailcolt<-tailcol-2
  
  
  
  tailcolr<-tailcol-4
  summaryfinal<-saveme[,1:tailcolr]
  
  meansem<-saveme[,tailcolt:tailcol]
  meansemt<-t(meansem)
  
  
  
  rowf<- tail(summaryfinal,11)
  fivesecondpercentresponderlow <-(sum(colSums(rowf[3,]>15,na.rm=TRUE))/ncol(rowf[3,])*100) 
  fivesecondpercentrespondermed <-(sum(colSums(rowf[4,]>15,na.rm=TRUE))/ncol(rowf[4,])*100)
  fivesecondpercentresponderhigh <-(sum(colSums(rowf[5,]>15,na.rm=TRUE))/ncol(rowf[5,])*100)
  
  tensecondpercentresponderlow  <-(sum(colSums(rowf[6,]>15,na.rm=TRUE))/ncol(rowf[6,])*100)
  tensecondpercentrespondermed  <-(sum(colSums(rowf[7,]>15,na.rm=TRUE))/ncol(rowf[7,])*100)
  tensecondpercentresponderhigh  <-(sum(colSums(rowf[8,]>15,na.rm=TRUE))/ncol(rowf[8,])*100)
  
  
  
  
  fivesecondpercentrespondermedcon <-(sum(colSums(rowf[11,]>1,na.rm=TRUE))/ncol(rowf[11,])*100)
  
  tensecondpercentrespondermedcon  <-(sum(colSums(rowf[10,]>1,na.rm=TRUE))/ncol(rowf[10,])*100)
  
  
  
  
  
  
  
  
  tailfmean<- rowMeans(rowf,na.rm=TRUE)
  
  rowt<-t(cbind(t(tailfmean),fivesecondpercentresponderlow,fivesecondpercentrespondermed,fivesecondpercentresponderhigh,tensecondpercentresponderlow,tensecondpercentrespondermed,tensecondpercentresponderhigh,fivesecondpercentrespondermedcon,tensecondpercentrespondermedcon,ncol(lmax)))  
  
  
  rownames(rowt)[rownames(rowt)=="fivesecondpercentresponderlow"]<-paste0("fivesecondpercentresponderlow",basename(file))
  rownames(rowt)[rownames(rowt)=="fivesecondpercentrespondermed"]<-paste0("fivesecondpercentrespondermed",basename(file))
  rownames(rowt)[rownames(rowt)=="fivesecondpercentresponderhigh"]<-paste0("fivesecondpercentresponderhigh",basename(file))
  
  rownames(rowt)[rownames(rowt)=="tensecondpercentresponderlow"]<-paste0("tensecondpercentresponderlow",basename(file))
  rownames(rowt)[rownames(rowt)=="tensecondpercentrespondermed"]<-paste0("tensecondpercentrespondermed",basename(file)) 
  rownames(rowt)[rownames(rowt)=="tensecondpercentresponderhigh"]<-paste0("tensecondpercentresponderhigh",basename(file)) 
  
  
  
  
  
  
  
  tailf[i,]<-c(as.numeric(rowt))
  stats<-summaryfinal[452:462,]
  stats[is.na(stats)] <- "xxx"
  stats_df<-data.frame(stats)
  frames_low_five_high<-(t(stats[5,]))
  frames_low_five_med<-(t(stats[4,]))
  frames_low_five_low<-(t(stats[3,]))
  frames_low_ten_high<-(t(stats[8,]))
  frames_low_ten_med<-(t(stats[7,]))
  frames_low_ten_low<-(t(stats[6,]))
  
  
  real_low_frames_five<-data.frame(t(as.numeric(frames_low_five_low)-as.numeric(frames_low_five_med)))
  real_med_frames_five<-data.frame(t(as.numeric(frames_low_five_med)-as.numeric(frames_low_five_high)))
  real_low_frames_ten<-data.frame(t(as.numeric(frames_low_ten_low)-as.numeric(frames_low_ten_med)))
  real_med_frames_ten<-data.frame(t(as.numeric(frames_low_ten_med)-as.numeric(frames_low_ten_high)))
  
  colnames(real_low_frames_five)<-colnames(stats) 
  colnames(real_med_frames_five)<-colnames(stats) 
  colnames(real_low_frames_ten)<-colnames(stats) 
  colnames(real_med_frames_ten)<-colnames(stats) 
  
  fin_stats<-rbind(stats,(real_low_frames_five),real_med_frames_five,real_low_frames_ten,real_med_frames_ten)
  
  rownames(fin_stats)<-c(rownames(stats),paste0("real_low_frames_five___",basename(file)),paste0("real_med_frames_five___",basename(file)),paste0("real_low_frames_ten___",basename(file)),paste0("real_med_frames_ten___",basename(file)))
  
  
  werser<-cbind(gsub(".*Track-|.csv|.*___","",rownames(fin_stats)),gsub("___.*","",rownames(fin_stats)))
  colnames(werser)<-c("genotype","metric")
  fin_stats_done<-cbind(werser,fin_stats)
  
  des<-fin_stats_done[,3:ncol(fin_stats_done)]
  propname<-gsub(".*Track-|.csv|.*___","",rownames(fin_stats))
  propname
  genotyp<-(replicate(ncol(des),propname[1]))
  
  longme<- rbind((genotyp),des)
  rownames(longme)<-c("Genotype",as.character(fin_stats_done$metric))
  
  write.csv(t(longme), file = paste0(the_dir, "/", "2_long_dat",basename(file)))
  
  t_longme<-data.frame(t(longme))
  long_dat_comb[[i]]<-t_longme
  
  
  write.csv(t(rowt), file = paste0(the_dir, "/", "tail",basename(file)))
  
  write.csv(saveme, file = paste0(the_dir, "/","calculated_output", basename(file)))

  write.csv(t(perchans), file = paste0(the_dir, "/","heatmap", basename(file)))
  
  
  tiff(filename=paste(the_dir, "/",gsub(".csv","",basename(file)),".tiff",sep=""),width=1000,height=1000,units="px",res=300)#Enter the file name
  my_palette <-  colorRampPalette(c("purple","white","green"))
  heatmap.2(t(perchans),breaks=seq(-30,30, length.out=50) ,scale="none",Rowv=FALSE, Colv=FALSE, col=my_palette, key=T, keysize=2,density.info="none", trace="none",cexCol=0.3,  labRow = NULL,cexRow=0.3,dendrogram="none", notecol="red") #Change the labRow

  dev.off()
  
  der<-data.frame(perresponsder_summary)
  
  plot_per_lowmehi<-data.frame(cbind((replicate(451,"low")),(replicate(451,"med")),(replicate(451,"high"))))
  
  c<-cbind(data.frame(1:451), plot_per_lowmehi$X1)
  colnames(c)<-c("frames","cate")
  ce<-cbind(data.frame(1:451), plot_per_lowmehi$X2)
  colnames(ce)<-c("frames","cate")
  cee<-cbind(data.frame(1:451), plot_per_lowmehi$X3)
  colnames(cee)<-c("frames","cate")
  plot_per_r<-rbind(c,ce,cee)
  
  de<-cbind(data.frame(der[,1]))
  colnames(de)<-c("percent_ct")
  dee<-cbind(data.frame(der[,2]))
  colnames(dee)<-c("percent_ct")
  deee<-cbind(data.frame(der[,3]))
  colnames(deee)<-c("percent_ct")
  
  s<-rbind(de,dee,deee)
  ploet<-cbind(plot_per_r,s)
  
  tiff(filename=paste("Prop",gsub(".*stats/|.csv","",basename(file)),".tiff",sep=""),width=2000,height=1000,units="px",res=300)#Enter the file name
  print(ggplot(ploet,aes(x=frames,y=percent_ct,group=as.factor(cate),fill=as.factor(cate)))+geom_area()+ 
          scale_fill_viridis(discrete = T)+ ggtitle(paste("Prop",gsub(".*stats/|.csv","",file),sep=""))+ylim(0,100))
  
  dev.off()
  rownames(fin_stats_done)<-fin_stats_done$metric
  write.csv(t(fin_stats_done), file = paste0(the_dir, "/", "2_Summary",basename(file)))
  
  letme<-latencymedten
  letme[is.na(letme)] <- 300
  ct_cumu<-list()
  for(cte in 1:length(letme)){
    
    
    bef<-data.frame(replicate(letme[cte],0))
    bef
    ct_Hap<-data.frame(replicate(301-letme[cte],1))
    ct_Hap
    colnames(bef)<-"v"
    colnames(ct_Hap)<-"v"
    cumuct_lar<- data.frame(rbind(bef,ct_Hap))
    colnames(cumuct_lar)<- paste0("cte",cte)
    ct_cumu[[cte]]<-cumuct_lar
  }
  fme<-data.frame(dplyr::bind_cols(ct_cumu))
  ct_cumu_curve<-data.frame(rowSums(fme)/ncol(fme)*100)
  colnames(ct_cumu_curve)<-basename(file)
  all_ct_percent[[i]]<-ct_cumu_curve
  
  
}

long_ets<-dplyr::bind_rows(long_dat_comb)

write.csv(long_ets,"1_Long_Data.csv")

cumulative_ct<-dplyr::bind_cols(all_ct_percent)
write.csv(cumulative_ct[1:300,],"1_cumulative curve.csv")
rownames(datmn)<-as.character(rowmn)
tdatmn<-t(datmn)
rownames(unlismn)<-as.character(rowmn)
tunlismn<-t(unlismn)

rownames(tailf)<-as.character(rowmn)
tail5n<-t(tailf)
colnames(tailf)<-as.character(c("5 sec mean area","10 sec mean area","5 sec frames below -8 treshhold","5 sec frames below -10 treshhold","5 sec frames below -12 treshhold","10 sec frames below -8 treshhold","10 sec frames below -10 treshhold","10 sec frames below -12 treshhold","5 sec time to minimum frames","10 sec analysis latency to holding ct for 0.5 seconds consecutively","5 sec analysis latency to holding ct for 0.5 ","5 sec % response for animals below -8% for 15frames","5 sec % response for animals below -10% for 15frames","5 sec % response for animals below -12% for 15frames","10 sec % response for animals below -8% for 15frames","10 sec % response for animals below -10% for 15frames","10 sec % response for animals below -12% for 15frames","fivesecondpercentrespondermedcon","tensecondpercentrespondermedcon","count"))
rownames(percentrespondercombine)<-as.character(rowmn)
tunlismn<-t(percentrespondercombine)
write.csv(t(datmn), file = paste0(the_dir,"/","1_Combined_heatmap.csv"))
write.csv(tailf, file = paste0(the_dir, "/","1_mean_stats.csv"))
write.csv(t(percentrespondercombine), file = paste0(the_dir, "/","1_percentrespondercombine.csv"))
write.csv(mean_areachangedata,file = paste0(the_dir, "/","1_mean_change_area_datastudio.csv"))

latectduration<-(tailf[,7]-tailf[,4])/30
earlyctduration<-tailf[,4]/30
finalcount<-tailf[,20]
earlyctpercentage<-tailf[,13]
latectpercentage<-tailf[,16]-tailf[,13]
latencyforCTinsec<-tailf[,10]/30

finaldatastudiostats<-cbind(latectduration,earlyctduration,finalcount,earlyctpercentage,latectpercentage,latencyforCTinsec)
rownames(finaldatastudiostats)<-as.character(rowmn)
write.csv(finaldatastudiostats,file = paste0(the_dir, "/","1_finaldatastudiostats.csv"))








ggg_data<-data.frame(read.csv("1_Combined_heatmap.csv", header = TRUE))
gg_data<-ggg_data[1:300,2:ncol(ggg_data)]

for(ii in 1:ncol(gg_data)){
  print(ii)
  coln<-gsub("\\."," ",colnames(gg_data))
  colnaa<-gsub("_Mean","",coln)
  colna<-gsub(" ","_",colnaa)
  genotyp<-(replicate(nrow(gg_data),colna[ii]))
  
  longme<- data.frame(cbind((genotyp),gg_data[,ii]))
  colnames(longme)<-c("Genotype","percent_responder")
  
  write.csv(longme,paste(colna[ii],"__longper.csv"))
  
}

fills  <- list.files(pattern = '__longper.csv')
fills
tables <- lapply(fills, read.csv, header = TRUE)

long_per_res <- do.call(bind_rows , tables)
write.csv(long_per_res,"1__long_percent_area_change.csv")
file.remove(fills)








ggg_data<-data.frame(read.csv("1_percentrespondercombine.csv", header = TRUE))
gg_data<-ggg_data[1:300,2:ncol(ggg_data)]*100

for(ii in 1:ncol(gg_data)){
  print(ii)
  coln<-gsub("\\."," ",colnames(gg_data))
  colnaa<-gsub("_Mean","",coln)
  colna<-gsub(" ","_",colnaa)
  genotyp<-(replicate(nrow(gg_data),colna[ii]))
  
  longme<- data.frame(cbind((genotyp),gg_data[,ii]))
  colnames(longme)<-c("Genotype","percent_responder")
  
  write.csv(longme,paste(colna[ii],"__longper.csv"))
  
}

fills  <- list.files(pattern = '__longper.csv')
fills
tables <- lapply(fills, read.csv, header = TRUE)

long_per_res <- do.call(bind_rows , tables)
write.csv(long_per_res,"1__long_insta_percent_responders.csv")
file.remove(fills)








ggg_data<-data.frame(read.csv("1_cumulative curve.csv", header = TRUE))
gg_data<-ggg_data[1:300,2:ncol(ggg_data)]

for(ii in 1:ncol(gg_data)){
  print(ii)
  coln<-gsub("\\."," ",colnames(gg_data))
  colnaa<-gsub(".csv","",coln)
  colna<-gsub(" ","_",colnaa)
  genotyp<-(replicate(nrow(gg_data),colna[ii]))
  
  longme<- data.frame(cbind((genotyp),gg_data[,ii]))
  colnames(longme)<-c("Genotype","percent_responder")
  
  write.csv(longme,paste(colna[ii],"__longper.csv"))
  
}

fills  <- list.files(pattern = '__longper.csv')
fills
tables <- lapply(fills, read.csv, header = TRUE)
long_per_res <- do.call(bind_rows , tables)
write.csv(long_per_res,"1__long_cumu_percent_responders.csv")
file.remove(fills)










dat<-data.frame(read.csv("1_mean_stats.csv"))
rownames(dat)<-dat$X

fiveseclow_CT<-dat$count*dat$X5.sec...response.for.animals.below..8..for.15frames/100
fivesecmed_CT<-dat$count*dat$X5.sec...response.for.animals.below..10..for.15frames/100
fivesechigh_CT<-dat$count*dat$X5.sec...response.for.animals.below..12..for.15frames/100
tenseclow_CT<-dat$count*dat$X10.sec...response.for.animals.below..8..for.15frames/100
tensecmed_CT<-dat$count*dat$X10.sec...response.for.animals.below..10..for.15frames/100
tensechigh_CT<-dat$count*dat$X10.sec...response.for.animals.below..12..for.15frames/100

fiveseclow_NR<-dat$count-fiveseclow_CT
fivesecmed_NR<-dat$count-fivesecmed_CT
fivesechigh_NR<-dat$count-fivesechigh_CT
tenseclow_NR<-dat$count-tenseclow_CT
tensecmed_NR<-dat$count-tensecmed_CT
tensechigh_NR<-dat$count-tensechigh_CT



new_dat<-cbind(dat,fiveseclow_CT,fiveseclow_NR,fivesecmed_CT,fivesecmed_NR,fivesechigh_CT,fivesechigh_NR,tenseclow_CT,tenseclow_NR,tensecmed_CT,tensecmed_NR,tensechigh_CT,tensechigh_NR)
write.csv(new_dat, "1_all_stats_w_CT_NR_count.csv")



write.csv(vidnames,"all_videonames.csv")

}
